input {
    redis {
        data_type => "list"
        key => "logstash-list"
        host => "127.0.0.1"
        port => 6379
        password => ""
        batch_count => 50
        threads => 4
    }

    beats {
        port => 5001
        type => "mongo-log"
    }

    beats {
        port => 5002
        type => "haproxy-log"
    }

    beats {
        port => 5003
        type => "k8s-log"
    }
}

filter {
     if ![type] {
         mutate {
            add_field => {
               "type" => "nodejs-log"
             }
     	}
     }

    if [type] == "k8s-log" {
        grok {
            match => { "[log][file][path]" => "/var/log/containers/%{DATA:pod_name}_%{DATA:namespace}_%{GREEDYDATA:container_name}-%{DATA:container_id}.log" }
            remove_field => ["[log][file][path]"]
            remove_tag => ["beats_input_codec_plain_applied", "beats_input_raw_event"]
        }

        if [namespace] == "production" {
            json {
               source => "message"
            }
            mutate {
                update => {
                      "type" => "reborn-pro"
               }
            }
            mutate {
                remove_field => ["resTime"]
            }
        }

        if [namespace] == "netx-production" {
            json {
               source => "message"
            }
            mutate {
                remove_field => ["message"]
                update => {
                      "type" => "netx-pro"
               }
            }
        }

        if [namespace] == "netx-development" {
            json {
                source => "message"
            }
            mutate {
                update => {
                      "type" => "netx-dev"
               }
            }
             mutate {
                remove_field => ["message"]
             }
        }

        if [namespace] == "gleeman" {
            json {
                source => "message"
            }
            if [container_name] {
                mutate {
                    rename => {
                        "container_name" => "type"
                    }
                }
            }
             mutate {
                remove_field => ["message"]
             }
        }

        if [namespace] == "shuku-development" {
            json {
                source => "message"
            }
            mutate {
                update => {
                      "type" => "shuku-dev"
               }
            }
             mutate {
                remove_field => ["message"]
             }
        }

        if [namespace] == "shuku-production" {
            json {
                source => "message"
            }
            mutate {
                remove_field => ["message"]
                update => {
                      "type" => "shuku-pro"
               }
            }
        }
    }

    if [type] == "nodejs-log" {
        json {
            source => "message"
        }

        if ![name] {
            mutate {
                add_field => {
                    "name" => "unknown"
                }
            }
        }

        mutate {
            rename => {
                "name" => "type"
            }
        }

        if [ip] {
            geoip {
                source => ip
                remove_field => [
                    "[geoip][continent_code]",
                    "[geoip][country_code2]",
                    "[geoip][country_code3]",
                    "[geoip][latitude]",
                    "[geoip][longitude]",
                    "[geoip][region_code]",
                    "[geoip][timezone]"
                ]
            }
        }
    }
}

output {
#    stdout {
#     codec => rubydebug
#    }
    elasticsearch {
        hosts => ["http://127.0.0.1:9200"]
        index => "logstash-%{type}-%{+YYYY.MM.dd}"
    }
}
